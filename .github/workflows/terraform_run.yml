name: Terraform Run

on: push

env: 
  TF_VAR_remote_state_bucket: ${{ secrets.S3_BACKEND_BUCKET }}

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-22.04
    outputs:
      PLANFILE_ARTIFACT_ID: ${{ steps.set-artifact-id-var.outputs.ARTIFACT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.11.4"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Run Terraform Plan
        run: |
          cd terraform 
          terraform init \
            -var-file="vars/dev.tfvars" \
            -backend-config="bucket=${{ secrets.S3_BACKEND_BUCKET }}" \
            -backend-config="key=${{ secrets.S3_BACKEND_KEY }}"
          terraform plan -input=false -out=plan.tfout
      - name: Upload Terraform Plan
        id: artifact-upload
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform/plan.tfout
      - name: Set Variable
        id: set-artifact-id-var
        run: |
          echo "ARTIFACT_ID="${{ steps.artifact-upload.outputs.artifact-id }}"" >> $GITHUB_OUTPUT
  
  apply:
    name: Terraform Apply
    runs-on: ubuntu-22.04
    environment: manual  # set up an environment to make this job only run when manually approved
    needs: plan
    env:
      PLANFILE_ARTIFACT_ID: ${{ needs.plan.outputs.PLANFILE_ARTIFACT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.11.4"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Download Terraform Plan
        id: pipeline-artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
      - name: Terraform Apply
        run: |
          cd terraform
          terraform init \
            -var-file="vars/dev.tfvars" \
            -backend-config="bucket=${{ secrets.S3_BACKEND_BUCKET }}" \
            -backend-config="key=${{ secrets.S3_BACKEND_KEY }}"
          terraform apply -auto-approve ../plan.tfout
      - name: Delete Artifact
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ACTIONS_API_TOKEN }}
          script: |
            github.rest.actions.deleteArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: "${{ env.PLANFILE_ARTIFACT_ID }}"
            });

  # destroy:
  #   name: Terraform Destroy
  #   runs-on: ubuntu-22.04
  #   environment: manual  # set up an environment to make this job only run when manually approved
  #   needs: apply
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: hashicorp/setup-terraform@v3
  #       with:
  #         terraform_version: "1.11.4"
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4.1.0
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1
  #     - name: Terraform Destroy
  #       run: |
  #         cd terraform
  #         terraform destroy -auto-approve